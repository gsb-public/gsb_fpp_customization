<?php

/**
 * Implements hook_library()
 */
function gsb_fpp_customization_library() {

  $libraries['superfish'] = array(
    'title' => 'Superfish',
    'website' => 'https://github.com/joeldbirch/superfish',
    'version' => '1.7.3',
    'js' => array(
      drupal_get_path('profile', 'gsb_public') . '/libraries/superfish/js/hoverIntent.js' => array(),
      drupal_get_path('profile', 'gsb_public') . '/libraries/superfish/js/superfish.js' => array(),
    ),
    'css' => array(
      drupal_get_path('profile', 'gsb_public') . '/libraries/superfish/css/superfish.css' => array(),
      drupal_get_path('profile', 'gsb_public') . '/libraries/superfish/css/superfish-vertical.css' => array(),
    ),
  );

  $libraries['gsb_fpp_customization'] = array(
    'title' => 'GSB Fpp Customization',
    'website' => 'https://github.com/gsbitse/gsb_fpp_customization',
    'version' => '',
    'js' => array(
      drupal_get_path('module', 'gsb_fpp_customization') . '/js/gsb_fpp_customization.js' => array(),
    ),
    'dependencies' => array(
      array('gsb_fpp_customization', 'superfish'),
    ),
  );

  return $libraries;
}

/**
 * Implements hook_form_FORM_ID_alter()
 */
function gsb_fpp_customization_form_ctools_block_content_type_edit_form_alter(&$form, &$form_state, $form_id) {

  // Alter the add_content_modal forms...
  _gsb_fpp_customization_add_content_form_alter($form, $form_state, $form_id);

}

/**
 * Implements hook_form_FORM_ID_alter()
 */
function gsb_fpp_customization_form_views_content_views_panes_content_type_edit_form_alter(&$form, &$form_state, $form_id) {

  // Alter the add_content_modal forms...
  _gsb_fpp_customization_add_content_form_alter($form, $form_state, $form_id);

}

function gsb_fpp_customization_form_fieldable_panels_panes_fieldable_panels_pane_content_type_edit_form_alter(&$form, &$form_state, $form_id) {

  global $user;

  // only show the pane categories the user has wb access to

  workbench_access_user_load_data($user);
  $active = workbench_access_get_active_tree();
  $account_access = array_keys($user->workbench_access);

  $categories = array();

  foreach ($account_access as $key => $value) {
    if (isset($active['tree'][$value])) {
      $category = $active['tree'][$value]['name'];
      $categories[$category] = $category;
    }
  }

  // adjust the visibility of reusable checkbox

  if (!empty($categories)) {
    if (isset($form_state['entity'])) {
      $form['reusable']['category']['#default_value'] = $form_state['entity']->category;
    } else {
      $form['reusable']['category']['#default_value'] = '';
    }

    $form['reusable']['category']['#type'] = 'select';
    $form['reusable']['category']['#options'] = $categories;

    $form['reusable']['category']['#title'] = t('Sections');
  }
  else {
    $form['reusable']['#access'] = FALSE;
  }

  // adjust the view_mode

  list($panels_module, $type) = explode(':', $form_state['display']->cache_key);

  $form['view_mode']['#type'] = 'value';

  if ($form['#bundle'] == 'existing_node' && $panels_module == 'panels_mini' &&
      in_array($type, array('business_insights', 'faculty_research', 'our_programs', 'the_stanford_gsb_experience'))) {
    $form['view_mode']['#value'] = 'megamenu';
  }
  else {
    $form['view_mode']['#value'] = 'full';
  }

  // hide the title field
  $form['title']['#access'] = FALSE;

  // hide the 'make title a link' field
  $form['link']['#access'] = FALSE;

  // hide the revision field and...
  // set the value to always be false
  $form['revision']['#access'] = FALSE;
  $form['revision']['revision']['#value'] = 0;

  $form['#validate'][] = 'gsb_fpp_customization_fpp_edit_form_validate';

  // Alter the add_content_modal forms...
  _gsb_fpp_customization_add_content_form_alter($form, $form_state, $form_id);

}

/**
 *
 * Alter the add_content_modal forms...
 *
 * 1. add back the cancel button that panopoly_magic had removed, but the js will hide it.
 * 2. add 'back' and 'cancel' links to the form
 *
 */
function _gsb_fpp_customization_add_content_form_alter(&$form, &$form_state, $form_id) {

  // todo: Would be nice to clean up later, if possible.
  // The following commented code is now running in gsb_panopoly_magic_customization...
  // to get around a function call order issue between this module and
  // panopoly magic.

  /*
  if (isset($form['buttons']['cancel']['#access'])) {
    unset($form['buttons']['cancel']['#access']);
    $form['buttons']['#weight'] = 1000;
  }
  */

  drupal_add_library('gsb_fpp_customization', 'gsb_fpp_customization');

  $form['buttons']['cancel_link'] = array(
    '#type' => 'link',
    '#title' => t('Cancel'),
    '#href' => '',
    '#weight' => 100,
    '#id' => 'cancel-link',
    '#options' => array(
      'fragment' => 'cancel',
    ),
  );

  $form['back_link'] = array(
    '#type' => 'link',
    '#title' => t('Back to Add Content'),
    '#href' => '',
    '#weight' => -99,
    '#id' => 'back-link',
    '#options' => array(
      'fragment' => 'back-link',
    ),
  );

}

function gsb_fpp_customization_fpp_edit_form_validate(&$form, &$form_state) {
  if (isset($form_state['values']['reusable']) && $form_state['values']['reusable'] == 1) {
    $admin_title = $form_state['values']['admin_title'];
    if (empty($admin_title)) {
      form_set_error('admin_title','Element Title field is required.');
    }
  }
}

/**
 * Process the panels add content modal to...
 *
 * Replace the default header (boring) with a list all the content links,
 * on the first page of the panels_add_content_modal.
 *
 */
function gsb_fpp_customization_process_panels_add_content_modal(&$vars) {

  $vars['first_page'] = FALSE;
  if ($vars['category'] == null || $vars['category'] == 'root') {
    $vars['first_page'] = TRUE;
    unset($vars['header']);
  }

  $vars['first_page_links'] = array();

  foreach($vars['categories'] as $category => $value) {
    if ($category == 'root') {
      continue;
    }
    $category_title = $value['title'];
    foreach($vars['categories'][$category]['content'] as $content) {
      $vars['first_page_links'][$category_title][] = array(
        'link' => theme('panels_add_content_link', array(
                    'renderer' => $vars['renderer'],
                    'region' => $vars['region'],
                    'first_page' => $vars['first_page'],
                    'content_type' => $content
                  )),
      );
    }
  }
}

/**
 * Preprocess panels_add_content_modal() to...
 *
 * 1. Change the title for the 'Blocks' category.
 * 2. Remove any categories that the user doesn't have access to or...
 * 3. Reorder the display of the categories
 * 4. Load the preview icons
 *
 */
function gsb_fpp_customization_preprocess_panels_add_content_modal(&$vars) {

  drupal_add_library('gsb_fpp_customization', 'gsb_fpp_customization');

  // change the title of the "Blocks" category
  _gsb_fpp_customization_retitle_blocks_category($vars);

  // remove any categories where the user doesn't have access or...
  // ones we don't want displayed
  _gsb_fpp_customization_remove_categories($vars);

  // reorder categories
  _gsb_fpp_customization_reorder_categories($vars);

  // load the preview icons
  _gsb_fpp_customization_load_preview_icons($vars);

}

function _gsb_fpp_customization_retitle_blocks_category(&$vars) {

  // change the title of the "Blocks" category to be more specific to the
  // CTA content that in this category

  if ($vars['categories']['blocks']['title']) {
    $vars['categories']['blocks']['title'] = 'Preformatted CTA';
    $url = $vars['renderer']->get_url('select-content', $vars['region'], 'blocks');
    $text_button = ctools_ajax_text_button('Preformatted CTA', $url, '', 'panels-modal-add-category');
    $index = 0;
    foreach($vars['categories'] as $key => $value) {
      if ($key == 'blocks') {
        break;
      }
      $index++;
    }
    $vars['categories_array'][$index] = $text_button;
  }

}

function _gsb_fpp_customization_remove_categories(&$vars) {

  global $user;

  // get the user's access

  workbench_access_user_load_data($user);

  $active = workbench_access_get_active_tree();
  $active_category_ids = array_keys($active['tree']);

  $workbench_access = $user->workbench_access;

  // find the categories that are not accessable to the user ...

  $remove_items = array();

  foreach ($active_category_ids as $key => $value) {
    if (!isset($workbench_access[$value])) {
      $remove_items[] = $active['tree'][$value]['name'];
    }
  }

  // ... also add in some other categories we just want to remove

  $other_items = array('display-suite', 'gsb-panes', 'entity', 'node', 'view-panes', 'menu');
  $remove_items = array_merge($remove_items, $other_items);

  // if remove_items has "Administrators" change it to "administrators"
  foreach($remove_items as $key => $value) {
    if ($value == 'Administrators') {
      $remove_items[$key] = 'administrators';
    }
  }

  // ... and remove them from the list that is displayed

  $index = 0;
  foreach($vars['categories'] as $key => $value) {
    if ($key == 'root') {
      continue;
    }
    if (in_array($key, $remove_items)) {
      unset($vars['categories_array'][$index]);
      unset($vars['categories'][$key]);
    }
    $index++;
  }

  // after yanking items out of the categories_array be need to
  // rekey the categories_array to be 0, 1, 2...
  $vars['categories_array'] = array_values($vars['categories_array']);

}

function _gsb_fpp_customization_reorder_categories(&$vars) {

  global $user;

  $category_keys = array_keys($vars['categories']);

  // reorder the display of the categories_array to follow this order:
  // 'blocks', 'content-panes', <any sections>, and 'other'

  $order_items = array(
    'blocks' => array_search('blocks', $category_keys),
    'content-panes' => array_search('content-panes', $category_keys),
  );

  // find any categories that are left

  $diff_keys = array_diff_key($vars['categories'], $order_items);

  // remove 'other' and 'root'
  // we don't 'root'... so bye bye
  // and we will be adding 'other' back at the end of the order items

  if (isset($diff_keys['root'])) {
    unset($diff_keys['root']);
  }

  if (isset($diff_keys['other'])) {
    unset($diff_keys['other']);
  }

  // and now what remains in diff should be the section categories

  foreach($diff_keys as $key => $value) {
    $order_items[$key] = array_search($key, $category_keys);
  }

  // only display the 'other' category if the user has the admin role
  if (in_array('administrator', array_values($user->roles))) {
    $order_items['other'] = array_search('other', $category_keys);
  }

  // now grab up the categories in the desired order

  $neworder_categories_array = array();
  foreach($order_items as $key => $value) {
    $neworder_categories_array[] = $vars['categories_array'][$value];
  }

  $vars['categories_array'] = $neworder_categories_array;

}

function _gsb_fpp_customization_load_preview_icons(&$vars) {

  // load the preview icons

  $icons = array();

  if (!empty($vars['categories'][$vars['category']]['content'])) {
    foreach ($vars['categories'][$vars['category']]['content'] as $key => $value) {
      $type_name = $value['type_name'];
      $subtype_name = $value['subtype_name'];
      $icons[$type_name . ':' . $subtype_name] = array('icon' => '');
    }
  }

  // have each module add their preview icon
  drupal_alter('gsb_fpp_customizations_icons', $icons);

  // render the icon as the preview for the content
  if (!empty($vars['categories'][$vars['category']]['content'])) {
    foreach ($vars['categories'][$vars['category']]['content'] as &$content) {
      $type_name = $content['type_name'];
      $subtype_name = $content['subtype_name'];
      $icon_key = $type_name . ':' . $subtype_name;
      if (isset($icons[$icon_key]) && !empty($icons[$icon_key]['icon'])) {
        $image_vars = array(
          'item' => array(
            'uri' => $icons[$icon_key]['icon'],
          ),
        );
        $content['preview'] = theme('image_formatter', $image_vars);
      }
    }
  }

}
